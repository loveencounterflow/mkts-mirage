
-- ---------------------------------------------------------------------------------------------------------
fragment create_table_main_first( path, default_dest, default_key, default_realm ):
  pragma foreign_keys = off;
  drop table if exists main;
  drop table if exists keys;
  drop table if exists realms;
  drop table if exists sources;
  pragma foreign_keys = on;
  -- .......................................................................................................
  create table sources (
    id              integer not null unique primary key, /* alias for system rowid */
    path            text    );
  insert into sources ( id,  path )
    values            (  1, $path );
  -- .......................................................................................................
  create table realms (
    realm           text    not null unique primary key );
  insert into realms  (          realm )
    values            ( $default_realm );
  -- .......................................................................................................
  create table keys (
    key             text    not null unique primary key,
    is_block        boolean not null default false,
    has_paragraphs  boolean not null default false
    check ( not ( ( not is_block ) and has_paragraphs ) ) );
  insert into keys  (          key, is_block )
    values          ( $default_key,    false );
  -- .......................................................................................................
  create table main (
    vnr       json    unique not null,
    stamped   boolean not null default false,
    dest      text    not null default $default_dest,
    sid       integer not null default 1 references sources ( id ),
    realm     text    not null default $default_realm references realms ( realm ),
    ref       text    default 'mirage',
    key       text    not null default $default_key references keys ( key ),
    text      text,
    p         json    default 'null',
    vnr_blob  blob    unique not null,
    primary key ( realm, vnr_blob ) );
  insert into main ( vnr, vnr_blob, text ) values
fragment create_table_main_middle( vnr, text ):
  ( $vnr, json_as_hollerith( $vnr ), $text )

-- ---------------------------------------------------------------------------------------------------------
query read_lines( limit ):
  select
      *
    from main
    order by vnr_blob
    limit $limit;

-- ---------------------------------------------------------------------------------------------------------
query read_lines():
  select
      *
    from main
    order by vnr_blob;

-- ---------------------------------------------------------------------------------------------------------
query read_unstamped_lines():
  select
      *
    from main
    where not stamped
    order by vnr_blob;

-- ---------------------------------------------------------------------------------------------------------
query read_unstamped_lines( realm ):
  select
      *
    from main
    where true
      and ( not stamped )
      and ( realm is $realm )
    order by vnr_blob;

-- ---------------------------------------------------------------------------------------------------------
query count_lines():
  select count(*) from main;

-- ---------------------------------------------------------------------------------------------------------
query get_stats():
  select null as key, null as count where false union all
    select 'all lines',     count(*) from main                    union all
    select 'active lines',  count(*) from main where not stamped  union all
    select 'stamped lines', count(*) from main where     stamped  union all
    select null, null where false;

-- ---------------------------------------------------------------------------------------------------------
procedure _insert( realm, key, vnr, vnr_blob, dest, text, p, stamped ):
  insert into
    main    (  realm,  key,  vnr,  vnr_blob,  dest,  text,  p,  stamped )
    values  ( $realm, $key, $vnr, $vnr_blob, $dest, $text, $p, $stamped );

-- ---------------------------------------------------------------------------------------------------------
procedure _update( realm, key, vnr, vnr_blob, dest, text, ref, p, stamped ):
  update main
    set (  realm,  key,  vnr,  vnr_blob,  dest,   text,  ref,  p,  stamped ) =
        ( $realm, $key, $vnr, $vnr_blob, $dest,  $text, $ref, $p, $stamped )
    where true
      and ( realm = $realm  )
      and ( vnr   = $vnr    );

-- -- ---------------------------------------------------------------------------------------------------------
-- procedure _update( vnr ):
--   update main
--     set (  vnr,  vnr_blob ) =
--         ( $vnr, $vnr_blob )
--     where vnr = $vnr;

-- ---------------------------------------------------------------------------------------------------------
procedure stamp_line( vnr ): update main set stamped = true where vnr = $vnr;

