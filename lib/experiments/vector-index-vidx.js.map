{
  "version": 3,
  "file": "vector-index-vidx.js",
  "sourceRoot": "../..",
  "sources": [
    "src/experiments/vector-index-vidx.coffee"
  ],
  "names": [],
  "mappings": ";AAEA;EAAA;AAAA,MAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAZ5B;;;EAcA,EAAA,GAA4B,OAAA,CAAQ,IAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,YAAR;;EAC5B,CAAA,CAAE,CAAF,EACE,MADF,EAEE,MAFF,CAAA,GAE4B,EAF5B;;EAGA,CAAA,CAAE,MAAF,EACE,EADF,CAAA,GAC4B,GAD5B;;EAEA,IAAC,CAAA,eAAD,GAA4B,QAAA,CAAE,IAAF,CAAA;WAAY,IAAM;EAAlB;;EAC5B,KAAA,GAA4B,OAAA,CAAQ,UAAR,EAvB5B;;;EAyBA,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,EAGE,OAHF,EAIE,OAJF,CAAA,GAI4B,KAJ5B,EAzBA;;;EA+BA,CAAA,CAAE,MAAF,EACE,OADF,EAEE,OAFF,CAAA,GAE4B,OAAA,CAAQ,YAAR,CAF5B,EA/BA;;;EAmCA,OAAA,CAA0B,sBAA1B;;EACA,MAAA,GAA4B,OAAA,CAAQ,OAAR,EApC5B;;;EAwCA,IAAC,CAAA,WAAD,GAAe,QAAA,CAAE,QAAF,CAAA;AACb,QAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,OAAA,EAAA;IAAA,QAAQ,CAAC,MAAT,CAAgB,QAAhB;IACA,CAAA,GAAI,SADJ;;;;;;IAOA,CAAC,CAAC,EAAE,CAAC,+BAAL,CAAA;IACA,KAAA,GAAQ,CACN,qBADM,EAEN,+BAFM,EAGN,6BAHM;AAIR;IAAA,KAAA,uCAAA;;MACE,IAAA,CAAK,IAAL;;;AACA;AAAA;QAAA,KAAA,UAAA;wBACE,IAAA,CAAK,GAAG,CAAC,IAAT;QADF,CAAA;;;IAFF,CAAA;;EAba,EAxCf;;;EA4DA,IAAO,qBAAP;IACE,OAAA,GAAU;IACP,CAAA,KAAA,CAAA,CAAA,GAAA;AAED,UAAA,QAAA;;MAAA,QAAA,GAAW,MAAM,CAAC,YAAP,CAAoB,cAApB;MACX,MAAM,MAAM,CAAC,eAAP,CAA4B,QAA5B;MACN,MAAM,IAAC,CAAA,WAAD,CAA4B,QAA5B;aACN,IAAA,CAAK,IAAL;IALC,CAAA,CAAH,CAAA,EAFF;;AA5DA",
  "sourcesContent": [
    "\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MKTS-MIRAGE/EXPERIMENTS/VECTOR-INDEX'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nFS                        = require 'fs'\nPATH                      = require 'path'\nPD                        = require 'pipedreams'\n{ $\n  $async\n  select }                = PD\n{ assign\n  jr }                    = CND\n@_drop_extension          = ( path ) -> path[ ... path.length - ( PATH.extname path ).length ]\ntypes                     = require '../types'\n#...........................................................................................................\n{ isa\n  validate\n  declare\n  size_of\n  type_of }               = types\n#...........................................................................................................\n{ assign\n  abspath\n  relpath }               = require '../helpers'\n#...........................................................................................................\nrequire                   '../exception-handler'\nMIRAGE                    = require '../..'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@populate_db = ( settings ) ->\n  validate.object settings\n  S = settings\n  # D = S.db.$.db\n  # ( D.prepare \"drop table if exists xxx;\"               ).run()\n  # ( D.prepare \"create table xxx( d blob );\"             ).run()\n  # ( D.prepare \"insert into xxx values ( ? );\"           ).run [ ( Buffer.from '123' ), ]\n  # debug 'Âµ433344', [ ( D.prepare \"select * from xxx;\"   ).iterate()..., ]\n  S.db.vidx_create_and_populate_tables()\n  names = [\n    'vidx_list_unordered'\n    'vidx_list_ordered_with_cached'\n    'vidx_list_ordered_with_call' ]\n  for name in names\n    urge name\n    for row from S.db[ name ]()\n      info row.vidx\n\n\n############################################################################################################\nunless module.parent?\n  testing = true\n  do =>\n    #.......................................................................................................\n    settings = MIRAGE.new_settings '../README.md'\n    await MIRAGE.write_sql_cache      settings\n    await @populate_db                settings\n    help 'ok'\n\n\n"
  ]
}