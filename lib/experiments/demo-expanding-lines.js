// Generated by CoffeeScript 2.4.1
(function() {
  'use strict';
  var $, $async, CND, FS, MIRAGE, PATH, PD, abspath, assign, badge, debug, declare, echo, help, info, isa, jr, relpath, rpr, select, size_of, testing, type_of, types, urge, validate, warn, whisper;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = 'MKTS-MIRAGE/EXPERIMENTS/EXPANDING-LINES';

  debug = CND.get_logger('debug', badge);

  warn = CND.get_logger('warn', badge);

  info = CND.get_logger('info', badge);

  urge = CND.get_logger('urge', badge);

  help = CND.get_logger('help', badge);

  whisper = CND.get_logger('whisper', badge);

  echo = CND.echo.bind(CND);

  //...........................................................................................................
  FS = require('fs');

  PATH = require('path');

  PD = require('pipedreams');

  ({$, $async, select} = PD);

  ({assign, jr} = CND);

  this._drop_extension = function(path) {
    return path.slice(0, path.length - (PATH.extname(path)).length);
  };

  types = require('../types');

  //...........................................................................................................
  ({isa, validate, declare, size_of, type_of} = types);

  //...........................................................................................................
  ({assign, abspath, relpath} = require('../helpers'));

  //...........................................................................................................
  require('../exception-handler');

  MIRAGE = require('../..');

  //-----------------------------------------------------------------------------------------------------------
  this.new_level = function(me, vlnr) {
    var R;
    validate.nonempty_list(vlnr);
    R = assign([], vlnr);
    R.push(0);
    return R;
  };

  //-----------------------------------------------------------------------------------------------------------
  this.advance = function(me, vlnr) {
    var R;
    validate.nonempty_list(vlnr);
    R = assign([], vlnr);
    R[vlnr.length - 1] += +1;
    return R;
  };

  //-----------------------------------------------------------------------------------------------------------
  this.translate_document = function(me) {
    /* TAINT how to convert vlnr in ICQL? */
    var color, db2, i, len, next_vlnr, old_vlnr, ref, ref1, ref2, ref3, row, word, words;
    validate.object(me);
    db2 = (MIRAGE.new_settings(me)).db;
    ref = me.db.read_unstamped_lines();
    for (row of ref) {
      old_vlnr = JSON.parse(row.vlnr);
      if (old_vlnr[0] > 10) {
        break;
      }
      next_vlnr = this.new_level(me, old_vlnr);
      if (!isa.blank_text(row.value)) {
        words = row.value.split(/\s+/);
        urge(`processing line ${old_vlnr} (${words.length} words)`);
        for (i = 0, len = words.length; i < len; i++) {
          word = words[i];
          next_vlnr = this.advance(me, next_vlnr);
        }
      }
      // debug 'µ20209', next_vlnr
      // me.db.insert_line { next_vlnr, }
      // debug 'µ10021', rpr row.vlnr
      db2.stamp_line({
        rowid: row.rowid
      });
    }
    ref1 = me.db.read_lines();
    //.........................................................................................................
    for (row of ref1) {
      color = row.stamped ? CND.grey : CND.green;
      info(color(`${row.rowid} ${row.vlnr} ${(row.stamped ? 'S' : ' ')} ${rpr(row.value.slice(0, 21))}`));
    }
    ref2 = me.db.xxx_select({
      rowid: 3
    });
    //.........................................................................................................
    for (row of ref2) {
      info(row);
    }
    ref3 = me.db.get_stats();
    //.........................................................................................................
    for (row of ref3) {
      info(row);
    }
    return null;
  };

  //###########################################################################################################
  if (module.parent == null) {
    testing = true;
    (async() => {
      var mirage;
      //.......................................................................................................
      mirage = MIRAGE.new_settings('../README.md');
      await MIRAGE.acquire(mirage);
      await this.translate_document(mirage);
      return help('ok');
    })();
  }

}).call(this);

//# sourceMappingURL=demo-expanding-lines.js.map
